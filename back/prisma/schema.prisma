
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int      @id @default(autoincrement())
  username  String
  firstname String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cart     CartItem[]
  wishlist WishlistItem[]

  @@map("users")
}

enum InventoryStatus {
INSTOCK
LOWSTOCK
OUTOFSTOCK
}

model Product {
id Int @id @default(autoincrement())
code String @unique
name String
description String
image String
category String
price Decimal
internalReference String
shellId Int
inventoryStatus InventoryStatus
rating Int
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

cartItems     CartItem[]
wishlistItems WishlistItem[]

@@map("products")

}


model CartItem {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
  @@map("cart_items")
}

model WishlistItem {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
  @@map("wishlist_items")
}